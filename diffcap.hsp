* diffcap.hsp

* Written 10/3/96 by David Harris  harrisd@leland.stanford.edu
* This spice deck extracts the capacitance per micron
* of transistor width for an inverter.

* The deck runs an optimization to find the value of a linear
* capacitor such that the delay of an inverter driving the
* linear capacitor equals the delay of the inverter driving
* a load inverter.

***********************************************************************
* Set supply and library
***********************************************************************
* The characterization script replaces !SUP! with the
* user-specified supply and !LIB! with the user-specified
* library.

.param Sup=!SUP!        * Must set before calling .lib
.temp !TEMP!            * Override temperature by setting it before .lib
.protect                * Don't print the contents of library
.lib '!LIB!' !CORNER!   * Load the library for process corner
.unprotect              * Resume printing SPICE deck
.param Supply=!VOLT!    * Override voltage by setting it after .lib
.opt scale=!LAMBDA!     * Set lambda
.option accurate

* Save results of simulation for viewing
.options post

***********************************************************************
* Define power supply
***********************************************************************

.global Vdd 	Gnd
Vdd	Vdd	Gnd	'Supply'	* Supply is set by .lib call

***********************************************************************
* Define Subcircuits
***********************************************************************

.subckt	inv In Out
m1	Out In Gnd Gnd	nmos	l=2 w=16 ad=80 as=80 pd=42 ps=42
m2	Out In Vdd Vdd	pmos	l=2 w=32 ad=160 as=160 pd=74 ps=74
.ends

.subckt ngatecap Inv
m1     Inv     Gnd     Gnd     Gnd     nmos    l=2  w=400 AD=0 PD=0
.ends

.subckt nadcap Inv
m1     Inv     Gnd     Gnd     Gnd     nmos    l=2  w=4 AD=2000 PD=0
.ends

.subckt npdcap Inv
m1     Inv     Gnd     Gnd     Gnd     nmos    l=2  w=4 AD=0 PD=400
.ends

.subckt npdgcap Inv
m1     Inv     Gnd     Gnd     Gnd     nmos    l=2  w=400 AD=0 PD=400
.ends

.subckt ntotcap Inv
m1     Inv     Gnd     Gnd     Gnd     nmos    l=2  w=400 AD=2000 PD=800
.ends

.subckt nsharedcap Inv
m1	Inv	Gnd	Gnd	Gnd	nmos	l=2 w=800 AD=2400 PD=800
.ends

.subckt nmergedcap Inv
m1 	Inv	Gnd	Gnd	Gnd	nmos	l=2 w=800 AD=1200 PD=800
.ends

.subckt pgatecap Inv
m1     Inv     Vdd     Vdd     Vdd     pmos    l=2  w=400 AD=0 PD=0
.ends

.subckt padcap Inv
m1     Inv     Vdd     Vdd     Vdd     pmos    l=2  w=4 AD=2000 PD=0
.ends

.subckt ppdcap Inv
m1     Inv     Vdd     Vdd     Vdd     pmos    l=2  w=4 AD=0 PD=400
.ends

.subckt ppdgcap Inv
m1     Inv     Vdd     Vdd     Vdd     pmos    l=2  w=400 AD=0 PD=400
.ends

.subckt ptotcap Inv
m1      Inv     Vdd     Vdd     Vdd     pmos    l=2  w=400 AD=2000 PD=800
.ends

.subckt psharedcap Inv
m1	Inv	Vdd	Vdd	Vdd	pmos	l=2 w=800 AD=2400 PD=800
.ends

.subckt pmergedcap Inv
m1 	Inv	Vdd	Vdd	Vdd	pmos	l=2 w=800 AD=1200 PD=800
.ends


***********************************************************************
* Top level simulation netlist
***********************************************************************
x0	In	In1	inv M=4
x1 	In1	Inb	inv	M=16		* set appropriate slope
x2	Inb	Inv	inv	M=32		* drive real load
xload	Inv	!LOAD!		M=16		* real load

x3	Inb	Cap	inv	M=32		* drive linear capacitor
c1	Cap	Gnd	'CperMicron*4*1600*!LAMBDA!/1u' * linear capacitor

***********************************************************************
* Stimulus
***********************************************************************

* Format of pulse input:
* pulse v_initial v_final t_delay t_rise t_fall t_pulsewidth t_period

Vin     In      Gnd     pulse 0 'Supply' 100ps 20ps 20ps 200ps 500ps
* Vin     In      Gnd     pulse 0 'Supply' 1ns 0.5ns 0.5ns 4ns 10ns

***********************************************************************
* Measurements
***********************************************************************

* Measure delay through inverters x2 and x3.
* Minimize this delay to find proper CperMicron

* Measure the rise and fall delays of the two inverters
.measure invR
+       TRIG v(Inb)  VAL='Supply/2' FALL=1 
+       TARG v(Inv)  VAL='Supply/2' RISE=1
.measure  capR
+       TRIG v(Inb)  VAL='Supply/2' FALL=1 
+       TARG v(Cap)  VAL='Supply/2' RISE=1
.measure invF
+       TRIG v(Inb)  VAL='Supply/2' RISE=1
+       TARG v(Inv)  VAL='Supply/2' FALL=1 
.measure  capF
+       TRIG v(Inb)  VAL='Supply/2' RISE=1
+       TARG v(Cap)  VAL='Supply/2' FALL=1 

* Compute the mismatch between the rise and fall times
.measure errorR param='invR - capR' goal=0
.measure errorF param='invF - capF' goal=0

* Optimize to find the capacitance per micron
* optrange is of the form (guess, min, max)
* a narrow range and good guess make the simulation faster

* .param CperMicron=optrange(0.5f, 0.01f, 10.0f) 
.param CperMicron=optrange(0.1f, 0.01f, 10.0f) 
.model optmod opt itropt=30 
.tran 0.1ps 500ps SWEEP OPTIMIZE=optrange RESULTS=errorR,errorF MODEL=optmod
*.tran 1ps 12ns SWEEP OPTIMIZE=optrange RESULTS=errorR,errorF MODEL=optmod

***********************************************************************
* End of Deck
***********************************************************************
* .measure CperMic param='CperMicron*4'
.measure CperMic param='CperMicron'

.end
